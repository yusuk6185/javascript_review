{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\GS66\\\\Desktop\\\\Docs\\\\Review\\\\React\\\\begin-react\\\\src\\\\MultipleInput.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from 'react'; // 여러개의 인풋 관리하기\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MultipleInput() {\n  _s();\n\n  const [inputs, setInputs] = useState({\n    name: '',\n    nickname: ''\n  });\n  const nameInput = useRef();\n  const {\n    name,\n    nickname\n  } = inputs;\n\n  const onChange = e => {\n    const {\n      name,\n      value\n    } = e.target; // 객체상태를 업데이트 할때는 spread 문법으로 한번 복사하고 특정 값을 덮어씌워서 업데이트 해야함.\n\n    setInputs({ ...inputs,\n      [name]: value\n    });\n  };\n\n  const onReset = () => {\n    setInputs({\n      name: '',\n      nickname: ''\n    });\n    nameInput.current.focus();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"name\",\n      placeholder: \"\\uC774\\uB984\",\n      onChange: onChange,\n      value: name,\n      ref: nameInput\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"nickname\",\n      placeholder: \"\\uB2C9\\uB124\\uC784\",\n      onChange: onChange,\n      value: nickname\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onReset,\n      children: \"\\uCD08\\uAE30\\uD654\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"b\", {\n        children: [\"\\uAC12: \", name, \"(\", nickname, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n\n_s(MultipleInput, \"GTkX/rC8rDh7NR37kZK1yJgGz7c=\");\n\n_c = MultipleInput;\nexport default MultipleInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"MultipleInput\");","map":{"version":3,"sources":["C:/Users/GS66/Desktop/Docs/Review/React/begin-react/src/MultipleInput.js"],"names":["React","useState","useRef","MultipleInput","inputs","setInputs","name","nickname","nameInput","onChange","e","value","target","onReset","current","focus"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,QAAwC,OAAxC,C,CAEA;;;;AACA,SAASC,aAAT,GAAyB;AAAA;;AACrB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,CAAC;AACjCK,IAAAA,IAAI,EAAE,EAD2B;AAEjCC,IAAAA,QAAQ,EAAE;AAFuB,GAAD,CAApC;AAIA,QAAMC,SAAS,GAAGN,MAAM,EAAxB;AACA,QAAM;AAAEI,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAqBH,MAA3B;;AAEA,QAAMK,QAAQ,GAAIC,CAAD,IAAO;AACpB,UAAM;AAAEJ,MAAAA,IAAF;AAAQK,MAAAA;AAAR,QAAkBD,CAAC,CAACE,MAA1B,CADoB,CAEpB;;AACAP,IAAAA,SAAS,CAAC,EACN,GAAGD,MADG;AAEN,OAACE,IAAD,GAAQK;AAFF,KAAD,CAAT;AAID,GAPH;;AAQA,QAAME,OAAO,GAAG,MAAM;AAClBR,IAAAA,SAAS,CAAC;AACNC,MAAAA,IAAI,EAAE,EADA;AAENC,MAAAA,QAAQ,EAAE;AAFJ,KAAD,CAAT;AAIAC,IAAAA,SAAS,CAACM,OAAV,CAAkBC,KAAlB;AACH,GAND;;AAQA,sBACI;AAAA,4BACI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,WAAW,EAAC,cAA/B;AAAoC,MAAA,QAAQ,EAAEN,QAA9C;AAAwD,MAAA,KAAK,EAAEH,IAA/D;AAAqE,MAAA,GAAG,EAAEE;AAA1E;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,WAAW,EAAC,oBAAnC;AAAyC,MAAA,QAAQ,EAAEC,QAAnD;AAA6D,MAAA,KAAK,EAAEF;AAApE;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAQ,MAAA,OAAO,EAAEM,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII;AAAA,6BACI;AAAA,+BAAOP,IAAP,OAAcC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH;;GAlCQJ,a;;KAAAA,a;AAoCT,eAAeA,aAAf","sourcesContent":["import React, { useState, useRef } from 'react';\r\n\r\n// 여러개의 인풋 관리하기\r\nfunction MultipleInput() {\r\n    const [inputs, setInputs] = useState({\r\n        name: '',\r\n        nickname: '',\r\n    });\r\n    const nameInput = useRef();\r\n    const { name, nickname } = inputs;\r\n\r\n    const onChange = (e) => {  \r\n        const { name, value } = e.target;\r\n        // 객체상태를 업데이트 할때는 spread 문법으로 한번 복사하고 특정 값을 덮어씌워서 업데이트 해야함.\r\n        setInputs({\r\n            ...inputs,\r\n            [name]: value,\r\n        });\r\n      }\r\n    const onReset = () => {\r\n        setInputs({\r\n            name: '',\r\n            nickname: ''\r\n        })\r\n        nameInput.current.focus();\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <input name=\"name\" placeholder=\"이름\" onChange={onChange} value={name} ref={nameInput}/>\r\n            <input name=\"nickname\" placeholder=\"닉네임\" onChange={onChange} value={nickname}/>\r\n            <button onClick={onReset}>초기화</button>\r\n            <div>\r\n                <b>값: {name}({nickname})</b>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MultipleInput;"]},"metadata":{},"sourceType":"module"}