{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\GS66\\\\Desktop\\\\Docs\\\\Review\\\\React\\\\begin-react\\\\src\\\\UserList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react'; // 배열 렌더링하기\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst User = /*#__PURE__*/React.memo(_c = _s(function User({\n  user,\n  onRemove,\n  onToggle\n}) {\n  _s();\n\n  const {\n    username,\n    email,\n    id,\n    active\n  } = user;\n  useEffect(() => {\n    console.log('user 값이 설정됨');\n    console.log(user); // MOUNT => 이때 하는 작업들:\n    // props -> state\n    // REST API\n    // D3 Video.js 라이브러리 사용 \n    // setInterval, setTimeout\n\n    return () => {\n      console.log('user 값이 바뀌기 전');\n      console.log(user); // UNMOUNT => 이때 하는 작업들:\n      // clearInterval, clearTimeout\n      // 라이브러리 인스턴스 제거\n    };\n  }, [user]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"b\", {\n      style: {\n        color: active ? 'green' : 'black',\n        cursor: 'pointer'\n      },\n      onClick: () => onToggle(id),\n      children: username\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [\"(\", email, \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => onRemove(id),\n      children: \"\\uC0AD\\uC81C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n}, \"OD7bBpZva5O2jO+Puf00hKivP7c=\"));\n_c2 = User;\n\nfunction UserList({\n  users,\n  onRemove,\n  onToggle\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: users.map( // key 가 있어야 효율적으로 업데이트 가능\n    user => /*#__PURE__*/_jsxDEV(User, {\n      user: user,\n      onRemove: onRemove,\n      onToggle: onToggle\n    }, user.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 30\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n}\n\n_c3 = UserList;\nexport default _c4 = /*#__PURE__*/React.memo(UserList);\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"User$React.memo\");\n$RefreshReg$(_c2, \"User\");\n$RefreshReg$(_c3, \"UserList\");\n$RefreshReg$(_c4, \"%default%\");","map":{"version":3,"sources":["C:/Users/GS66/Desktop/Docs/Review/React/begin-react/src/UserList.js"],"names":["React","useEffect","User","memo","user","onRemove","onToggle","username","email","id","active","console","log","color","cursor","UserList","users","map"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CAEA;;;AAEA,MAAMC,IAAI,gBAAGF,KAAK,CAACG,IAAN,SAAW,SAASD,IAAT,CAAc;AAAEE,EAAAA,IAAF;AAAQC,EAAAA,QAAR;AAAkBC,EAAAA;AAAlB,CAAd,EAA4C;AAAA;;AAChE,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,KAAZ;AAAmBC,IAAAA,EAAnB;AAAuBC,IAAAA;AAAvB,MAAkCN,IAAxC;AACAH,EAAAA,SAAS,CAAC,MAAM;AACZU,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYR,IAAZ,EAFY,CAGZ;AACA;AACA;AACA;AACA;;AACA,WAAO,MAAM;AACTO,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYR,IAAZ,EAFS,CAGT;AACA;AACA;AACH,KAND;AAOH,GAfQ,EAeN,CAACA,IAAD,CAfM,CAAT;AAiBA,sBACI;AAAA,4BACI;AAAG,MAAA,KAAK,EAAE;AACNS,QAAAA,KAAK,EAAEH,MAAM,GAAG,OAAH,GAAa,OADpB;AAENI,QAAAA,MAAM,EAAE;AAFF,OAAV;AAIA,MAAA,OAAO,EAAE,MAAMR,QAAQ,CAACG,EAAD,CAJvB;AAAA,gBAMKF;AANL;AAAA;AAAA;AAAA;AAAA,YADJ,uBAUI;AAAA,sBAAQC,KAAR;AAAA;AAAA;AAAA;AAAA;AAAA,YAVJ,eAaI;AAAQ,MAAA,OAAO,EAAE,MAAMH,QAAQ,CAACI,EAAD,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH,CApCY,kCAAb;MAAMP,I;;AAsCN,SAASa,QAAT,CAAkB;AAAEC,EAAAA,KAAF;AAASX,EAAAA,QAAT;AAAmBC,EAAAA;AAAnB,CAAlB,EAAiD;AAC7C,sBACI;AAAA,cAEQU,KAAK,CAACC,GAAN,EACI;AACAb,IAAAA,IAAI,iBAAK,QAAC,IAAD;AACG,MAAA,IAAI,EAAEA,IADT;AAGG,MAAA,QAAQ,EAAEC,QAHb;AAIG,MAAA,QAAQ,EAAEC;AAJb,OAEQF,IAAI,CAACK,EAFb;AAAA;AAAA;AAAA;AAAA,YAFb;AAFR;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH;;MAhBQM,Q;AAkBT,kCAAef,KAAK,CAACG,IAAN,CAAWY,QAAX,CAAf","sourcesContent":["import React, { useEffect } from 'react';\r\n\r\n// 배열 렌더링하기\r\n\r\nconst User = React.memo(function User({ user, onRemove, onToggle }) {\r\n    const { username, email, id, active } = user;\r\n    useEffect(() => {\r\n        console.log('user 값이 설정됨')\r\n        console.log(user);\r\n        // MOUNT => 이때 하는 작업들:\r\n        // props -> state\r\n        // REST API\r\n        // D3 Video.js 라이브러리 사용 \r\n        // setInterval, setTimeout\r\n        return () => {\r\n            console.log('user 값이 바뀌기 전');\r\n            console.log(user);\r\n            // UNMOUNT => 이때 하는 작업들:\r\n            // clearInterval, clearTimeout\r\n            // 라이브러리 인스턴스 제거\r\n        }\r\n    }, [user]);\r\n\r\n    return(\r\n        <div>\r\n            <b style={{\r\n                color: active ? 'green' : 'black',\r\n                cursor: 'pointer'\r\n            }}\r\n            onClick={() => onToggle(id)}\r\n            >\r\n                {username}\r\n            </b>\r\n            &nbsp;\r\n            <span>({email})</span>\r\n            {/* parameter 를 받아서 함수를 실행하고 싶을때 -> onClick={onRemove(id)} 이렇게 하면 안됨.*/}\r\n            {/* 렌더링 되자마자 실행해버리기 때문에 함수를 만들어 줘야함 */}\r\n            <button onClick={() => onRemove(id)}>삭제</button>\r\n        </div> \r\n    );   \r\n});\r\n\r\nfunction UserList({ users, onRemove, onToggle }) {\r\n    return (\r\n        <div>\r\n            {\r\n                users.map(\r\n                    // key 가 있어야 효율적으로 업데이트 가능\r\n                    user => (<User \r\n                                user={user} \r\n                                key={user.id}\r\n                                onRemove={onRemove}\r\n                                onToggle={onToggle}\r\n                            />)\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default React.memo(UserList);"]},"metadata":{},"sourceType":"module"}