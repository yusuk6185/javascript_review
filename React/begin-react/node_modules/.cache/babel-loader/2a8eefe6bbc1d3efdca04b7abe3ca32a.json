{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\GS66\\\\Desktop\\\\Docs\\\\Review\\\\React\\\\begin-react\\\\src\\\\UserList.js\";\nimport React from 'react'; // 배열 렌더링하기\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction User({\n  user,\n  onRemove\n}) {\n  const {\n    username,\n    email,\n    id\n  } = user;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"b\", {\n      children: username\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [\"(\", email, \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 31\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => onRemove(id),\n      children: \"\\uC0AD\\uC81C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n}\n\n_c = User;\n\nfunction UserList({\n  users,\n  onRemove\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: users.map( // key 가 있어야 효율적으로 업데이트 가능\n    user => /*#__PURE__*/_jsxDEV(User, {\n      user: user,\n      onRemove: onRemove\n    }, user.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 30\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n}\n\n_c2 = UserList;\nexport default UserList;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"User\");\n$RefreshReg$(_c2, \"UserList\");","map":{"version":3,"sources":["C:/Users/GS66/Desktop/Docs/Review/React/begin-react/src/UserList.js"],"names":["React","User","user","onRemove","username","email","id","UserList","users","map"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;;;AAEA,SAASC,IAAT,CAAc;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAd,EAAkC;AAC9B,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,KAAZ;AAAmBC,IAAAA;AAAnB,MAAyBJ,IAA/B;AACA,sBACI;AAAA,4BACI;AAAA,gBAAIE;AAAJ;AAAA;AAAA;AAAA;AAAA,YADJ,oBACsB;AAAA,sBAAQC,KAAR;AAAA;AAAA;AAAA;AAAA;AAAA,YADtB,eAGI;AAAQ,MAAA,OAAO,EAAE,MAAMF,QAAQ,CAACG,EAAD,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;KATQL,I;;AAWT,SAASM,QAAT,CAAkB;AAAEC,EAAAA,KAAF;AAASL,EAAAA;AAAT,CAAlB,EAAuC;AACnC,sBACI;AAAA,cAEQK,KAAK,CAACC,GAAN,EACI;AACAP,IAAAA,IAAI,iBAAK,QAAC,IAAD;AACG,MAAA,IAAI,EAAEA,IADT;AAGG,MAAA,QAAQ,EAAEC;AAHb,OAEQD,IAAI,CAACI,EAFb;AAAA;AAAA;AAAA;AAAA,YAFb;AAFR;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH;;MAfQC,Q;AAiBT,eAAeA,QAAf","sourcesContent":["import React from 'react';\r\n\r\n// 배열 렌더링하기\r\n\r\nfunction User({ user, onRemove }) {\r\n    const { username, email, id} = user;\r\n    return(\r\n        <div>\r\n            <b>{username}</b> <span>({email})</span>\r\n            {/* parameter 를 받아서 함수를 실행하고 싶을때 -> onClick={onRemove(id)} 이렇게 하면 안됨.*/}\r\n            <button onClick={() => onRemove(id)}>삭제</button>\r\n        </div> \r\n    );   \r\n}\r\n\r\nfunction UserList({ users, onRemove }) {\r\n    return (\r\n        <div>\r\n            {\r\n                users.map(\r\n                    // key 가 있어야 효율적으로 업데이트 가능\r\n                    user => (<User \r\n                                user={user} \r\n                                key={user.id}\r\n                                onRemove={onRemove}\r\n                            />)\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserList;"]},"metadata":{},"sourceType":"module"}